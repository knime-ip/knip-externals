<project>

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.scijava</groupId>
    <artifactId>pom-scijava</artifactId>
    <version>1.149</version>
    <relativePath />
  </parent>

  <groupId>org.knime.knip</groupId>
  <artifactId>org.knime.knip.pom-scijava</artifactId>
  <version>1.149</version>
  <packaging>pom</packaging>
  <name>KNIME/SciJava parent</name>

  <description>A parent POM for the bundles wrapping SciJava and friends.</description>

  <properties>
    <imglib2.version>2.0.0-knip-SNAPSHOT</imglib2.version>
  </properties>

  <modules>
    <module>org.knime.knip.scijava</module>
    <module>org.knime.knip.imglib2</module>
    <module>org.knime.knip.scifio</module>
    <module>org.knime.knip.scifio-bf-compat</module>
  </modules>

  <prerequisites>
    <!-- excludes seem not to work correctly with older Maven -->
    <maven>3.0.0</maven>
  </prerequisites>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.4.0</version>
        <extensions>true</extensions>
        <configuration>
          <supportedProjectTypes>
            <supportedProjectType>bundle</supportedProjectType>
          </supportedProjectTypes>
          <instructions>
            <Embed-Dependency>*;scope=compile</Embed-Dependency>
            <Embed-Transitive>true</Embed-Transitive>
            <Export-Package>${export.package}.*</Export-Package>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
          </instructions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <pde>true</pde>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-bundle</id>
      <activation>
        <!-- NB: activation based on packaging is not possible... -->
        <file>
          <exists>${basedir}/../org.knime.knip.scijava</exists>
        </file>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <executions>
              <execution>
                <id>build-bundle</id>
                <phase>package</phase>
                <goals>
                  <goal>bundle</goal>
                </goals>
                <configuration>
                  <excludeDependencies>${no-embed.dependencies}</excludeDependencies>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>importable-projects</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.1</version>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>compile</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}</outputDirectory>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <overWriteIfNewer>true</overWriteIfNewer>
                  <excludeArtifactIds>${no-embed.dependencies}</excludeArtifactIds>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <executions>
              <execution>
                <id>make-manifest</id>
                <phase>compile</phase>
                <goals>
                  <goal>manifest</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludeDependencies>${no-embed.dependencies}</excludeDependencies>
              <manifestLocation>${basedir}/META-INF</manifestLocation>
              <outputDirectory>${basedir}</outputDirectory>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <executions>
              <execution>
                <id>configure-eclipse</id>
                <phase>compile</phase>
                <goals>
                  <goal>eclipse</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>make-paths-relative</id>
                <phase>compile</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    def rewrite(path) {
                      builder = new StringBuilder();
                      reader = new java.io.BufferedReader(new java.io.FileReader(path));
                      skip = false;
                      for (;;) {
                        line = reader.readLine();
                        if (line == null) break;
                        if (line.contains('/linkedResources>')) skip = false;
                        else if (line.contains('linkedResources>')) skip = true;
                        else if (!skip) {
                          builder.append(line
                            .replaceAll('${user.home}/.m2/[^"]*/', '')
                            .replaceAll('M2_REPO/[^"]*/', '')).append('\\n');
                        }
                      }
                      reader.close();
                      out = new java.io.FileOutputStream(path);
                      out.write(builder.toString().getBytes());
                      out.close();
                    }
                    rewrite("${basedir}/.classpath");
                    rewrite("${basedir}/.project");
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>2.3</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${basedir}</directory>
                  <includes>
                    <include>META-INF</include>
                    <include>.classpath</include>
                    <include>.project</include>
                    <include>.settings</include>
                    <include>*.jar</include>
                  </includes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
                <fileset>
                  <directory>${basedir}/target</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>

